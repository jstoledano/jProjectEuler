package oneHundred;

public class OneToTen {
	
	public long problem001(int limit) {
		long  sum = 0;
		
		for (int i = 0; i < limit; i++) {
			if (i % 3 == 0 || i % 5 == 0) {
				sum += i;
			}
		}
		
		return sum;
	}
	
	public int problem002(int limit) {
		/*
		 * Even Fibonacci Numbers
		 * Problem 002
		 * 
		 * Each new term in the Fibonacci sequence is generated by
		 * adding the previous two terms. By starting with 1 and
		 * 2, the first 10 terms will be:
		 * 
		 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
		 * 
		 * By considering the terms in the Fibonacci sequence
		 * whose values do not exceed four million, find the sum
		 * of the even-valued terms.
		 * 
		 */
		
		int sum = 0;
		int a = 1;
		int b = 1;
		
		while (b < limit) {
			if (b % 2 == 0) {
				sum += b;
			}
			int h = a + b;
			a = b; b = h;
		}
		return sum;
	}

}
